#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

AC_PREREQ(2.61)
AC_INIT([libmgncs4pad], [1.0.0])
AC_CONFIG_SRCDIR([src/mpad.c])

mgncs4pad_MAJOR_VERSION=1
mgncs4pad_MINOR_VERSION=0
mgncs4pad_MICRO_VERSION=0
mgncs4pad_INTERFACE_AGE=0
mgncs4pad_BINARY_AGE=0
mgncs4pad_VERSION=$mgncs4pad_MAJOR_VERSION.$mgncs4pad_MINOR_VERSION.$mgncs4pad_MICRO_VERSION

AC_SUBST(mgncs4pad_MAJOR_VERSION)
AC_SUBST(mgncs4pad_MINOR_VERSION)
AC_SUBST(mgncs4pad_MICRO_VERSION)
AC_SUBST(mgncs4pad_INTERFACE_AGE)
AC_SUBST(mgncs4pad_BINARY_AGE)
AC_SUBST(mgncs4pad_VERSION)

AC_DEFINE_UNQUOTED(MGNCS4PAD_MAJOR_VERSION, 
                   $mgncs4pad_MAJOR_VERSION, [Major version of mgncs4pad])
AC_DEFINE_UNQUOTED(MGNCS4PAD_MINOR_VERSION, 
                   $mgncs4pad_MINOR_VERSION, [Minor version of mgncs4pad])
AC_DEFINE_UNQUOTED(MGNCS4PAD_MICRO_VERSION, 
                   $mgncs4pad_MICRO_VERSION, [Micro version of mgncs4pad])
AC_DEFINE_UNQUOTED(MGNCS4PAD_INTERFACE_AGE, 
                   $mgncs4pad_INTERFACE_AGE, [Interface age of mgncs4pad])
AC_DEFINE_UNQUOTED(MGNCS4PAD_BINARY_AGE, 
                   $mgncs4pad_BINARY_AGE, [Binary age of mgncs4pad])

# libtool versioning
LT_RELEASE=$mgncs4pad_MAJOR_VERSION.$mgncs4pad_MINOR_VERSION
LT_CURRENT=`expr $mgncs4pad_MICRO_VERSION - $mgncs4pad_INTERFACE_AGE`
LT_REVISION=$mgncs4pad_INTERFACE_AGE
LT_AGE=`expr $mgncs4pad_BINARY_AGE - $mgncs4pad_INTERFACE_AGE`

AC_SUBST(LT_RELEASE)
AC_SUBST(LT_CURRENT)
AC_SUBST(LT_REVISION)
AC_SUBST(LT_AGE)

AC_CANONICAL_SYSTEM

dnl ========================================================================
# Checks for programs.
AC_PROG_CC
AC_PROG_LD
AC_PROG_RANLIB
AC_PROG_LIBTOOL
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET

AM_INIT_AUTOMAKE(libmgncs4pad, $mgncs4pad_VERSION,-)

AC_HEADER_DIRENT
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS([fcntl.h stdlib.h string.h sys/ioctl.h sys/time.h termio.h termios.h unistd.h])

# Checks for typedefs, structures, and compiler characteristics.
AC_HEADER_STDBOOL
AC_C_CONST
AC_C_INLINE
AC_TYPE_PID_T
AC_STRUCT_TM

# Checks for library functions.
AC_FUNC_CLOSEDIR_VOID
AC_FUNC_FORK
AC_PROG_GCC_TRADITIONAL
AC_FUNC_MALLOC
AC_FUNC_STAT
AC_FUNC_VPRINTF
AC_FUNC_ALLOCA
AC_CHECK_FUNCS([bzero dup2 getcwd memmove memset putenv strchr strdup strerror strstr])


AC_CONFIG_HEADER(mgncs4padconfig.h)

AC_ARG_WITH(libsuffix,
  [  --with-libsuffix=ARG    configure the suffix of the library name.])

case "$with_libsuffix" in
    "")
        NCS4PAD_LIBSUFFIX=""
        have_libsuffix="no"
    ;;
    *)
        NCS4PAD_LIBSUFFIX="_$withval"
        have_libsuffix="yes"
    ;;
esac

AC_ARG_ENABLE(guibuilder-support,
[ --enable-guibuilder-support   new control set used to support guibuilder <default=no>],
guibuilder_support=$enableval)

if test "x$guibuilder_support" = "xyes"; then
	AC_DEFINE(_MGNCS4PAD_GUIBUILDER_SUPPORT, 1,
		[Define if support guibuilder])
fi

AM_CONDITIONAL(NCS4PAD_HAVE_LIBSUFFIX, test "x$have_libsuffix" = "xyes")
AC_SUBST(NCS4PAD_LIBSUFFIX)
AC_DEFINE_UNQUOTED(_NCS4PAD_LIBSUFFIX, "${NCS4PAD_LIBSUFFIX}", [MGNCS library suffix])

cfgfile=mgncs4pad.cfg

AC_DEFINE_UNQUOTED(MGNCS4PAD_ETCFILE, "${cfgfile}", [MGNCS4PAD configure file name])

dnl ========================================================================
dnl check for run-time mode of MiniGUI
dnl ========================================================================

have_libminigui="no"
AC_CHECK_HEADERS(minigui/common.h, have_libminigui=yes, foo=bar)

if test "x$have_libminigui" != "xyes"; then
    AC_MSG_WARN([
        MiniGUI is not properly installed on the system. You need 
        MiniGUI Ver 3.0.2 or later for building this package. 
        Please configure and install MiniGUI Ver 3.0.2 first.
    ])
fi

threads_version="no"
AC_CHECK_DECLS(_MGRM_THREADS, threads_version="yes", 
               foo=bar, [#include <minigui/common.h>])

procs_version="no"
AC_CHECK_DECLS(_MGRM_PROCESSES, procs_version="yes", 
               foo=bar, [#include <minigui/common.h>])

standalone_version="no"
AC_CHECK_DECLS(_MGRM_STANDALONE, standalone_version="yes", 
               foo=bar, [#include <minigui/common.h>])

if test "x$threads_version" = "xyes"; then
   	CFLAGS="$CFLAGS -D_REENTRANT"
    APP_LIBS="$APP_LIBS -lminigui_ths"
else
	if test "x$standalone_version" = "xyes"; then
     	 APP_LIBS="$APP_LIBS -lminigui_sa"
   	else
      	APP_LIBS="$APP_LIBS -lminigui_procs"
   	fi  
fi

if test "x$threads_version" != "xyes"; then
    lib_pthread="yes"
    AC_CHECK_DECLS(_MGGAL_SHADOW, APP_LIBS="$APP_LIBS -lpthread", 
                   lib_pthread="no", [#include <minigui/common.h>])
    if test "x$lib_pthread" = "xno"; then
        AC_CHECK_DECLS(_MGGAL_MLSHADOW, APP_LIBS="$APP_LIBS -lpthread", 
                       no_pthread="no", [#include <minigui/common.h>])
    fi
else
	APP_LIBS="$APP_LIBS -lpthread"
fi

PKG_CHECK_MODULES([MINIGUI], [minigui >= 3.0.10])
APP_LIBS="$APP_LIBS $MINIGUI_LIBS"

APP_LIBS="$APP_LIBS -lmgutils -lmgplus -lpthread"

have_libmgncs="no"
AC_CHECK_HEADERS(mgncs/mgncs.h, have_libmgncs=yes, foo=bar)

if test "x$have_libmgncs" != "xyes"; then
    AC_MSG_WARN([
        MGNCS is not properly installed on the system. You need 
        MGNCS Ver 1.0 or later for building this package. 
        Please configure and install MGNCS first.
    ])
else
	APP_LIBS="$APP_LIBS -lmgncs"
fi

have_libmgeff="no"
AC_CHECK_HEADERS(mgeff/mgeff.h, have_libmgeff=yes, foo=bar)

if test "x$have_libmgeff" != "xyes"; then
    AC_MSG_WARN([
        MGEFF is not properly installed on the system. You need 
        MGEFF Ver 0.8 or later for building this package. 
        Please configure and install MGEFF first.
    ])
else
	APP_LIBS="$APP_LIBS -lmgeff"
fi


CFLAGS="$CFLAGS -D__NCS4PAD_LIB__"

APP_LIBS="$APP_LIBS -lm -lpng -ljpeg -lfreetype"

#AC_CHECK_DECLS(_HAVE_MATH_LIB, APP_LIBS="$APP_LIBS -lm", 
#               foo=bar, [#include <minigui/common.h>])
#AC_CHECK_DECLS(_MGIMAGE_PNG, APP_LIBS="$APP_LIBS -lpng",
#               foo=bar, [#include <minigui/common.h>])
#AC_CHECK_DECLS(_MGIMAGE_JPG, APP_LIBS="$APP_LIBS -ljpeg", 
#               foo=bar, [#include <minigui/common.h>])
#AC_CHECK_DECLS(_MGFONT_TTF, APP_LIBS="$APP_LIBS -lttf", 
#               foo=bar, [#include <minigui/common.h>])
#AC_CHECK_DECLS(_MGFONT_FT2, APP_LIBS="$APP_LIBS -lfreetype", 
#               foo=bar, [#include <minigui/common.h>])

if test "$ac_cv_prog_gcc" = "yes"; then
    CFLAGS="$CFLAGS -Wall -Wstrict-prototypes -pipe"
fi


AC_SUBST(APP_LIBS)

AC_CONFIG_FILES([Makefile
				include/Makefile
				include/pieces/Makefile
				src/Makefile
				src/pieces/Makefile
				etc/Makefile
				plugin/Makefile
				plugin/guibuilder/Makefile
				plugin/guibuilder/icon/Makefile
				plugin/guibuilder/renderer/Makefile
				plugin/guibuilder/renderer/fashion/Makefile
				plugin/guibuilder/uieditor/Makefile
				plugin/guibuilder/uieditor/defines/Makefile
				])

AC_OUTPUT


